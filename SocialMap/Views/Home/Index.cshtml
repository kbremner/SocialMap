@{
    ViewBag.Title = "SocialMap";
}

<geo-location highaccuracy></geo-location>
<google-map disabledefaultui fittomarkers maptype="satellite"></google-map>
<ul id="hashtags"></ul>
<div id="relocate" class="btn btn-primary">
    <span>Relocate</span>
</div>

<template id="marker-template">
    <google-map-marker latitude="" longitude="">
        <div class="tweet">
            <p><a class="tweet-sender-link" href="" target="_blank"><span class="tweet-sender"></span></a></p>
            <p class="tweet-text"></p>
            <p><cw-moment class="tweet-moment" datetime="" fromnow></cw-moment></p>
            <p>
                <img src="~/Content/assets/favourites.png" class="tweet-favs-img" />
                <span class="tweet-fav-count"></span>
                <img src="~/Content/assets/retweets.png" class="tweet-retweets-img" />
                <span class="tweet-retweet-count"></span>
            </p>
        </div>
    </google-map-marker>
</template>

<template id="hashtag-template">
    <li class="hashtag btn btn-primary btn-lrg" data-hashtag=""><span></span></li>
</template>

<script>
    var loc = document.querySelector('geo-location');

    $("#relocate").click(function (e) {
        loc.setAttribute("watchpos", "true");
    });

    loc.addEventListener('geo-response', function (e) {
        // only want one update at a time, so remove watchpos if it is set
        loc.removeAttribute("watchpos");

        var map = document.querySelector("google-map");
        map.latitude = this.latitude;
        map.longitude = this.longitude;

        $.ajax({
            url: "@Url.Action("Tweets", "Twitter")?radius=1mi&latitude=" + this.latitude + "&longitude=" + this.longitude,
            success: success,
            error: error
        });

        function error(xhr) {
            if (xhr.status === 401) {
                window.open("@Url.Action("Authenticate", "Twitter")", "_self");
            } else {
                // TODO: handle all other error cases...
            }
        }

        function success(result) {
            // get the map and clear it
            var map = $("google-map");
            map.html("");

            // Loop over all the tweets
            for (var i = 0; i < result.Tweets.length; i++) {
                var tweet = result.Tweets[i];

                var template = document.querySelector("#marker-template");

                var marker = template.content.querySelector("google-map-marker");
                marker.setAttribute("longitude", tweet.Longitude);
                marker.setAttribute("latitude", tweet.Latitude);

                var textHolder = template.content.querySelector(".tweet-text");
                textHolder.textContent = tweet.Text;

                var senderHolder = template.content.querySelector(".tweet-sender");
                senderHolder.textContent = "@@" + tweet.Sender + ":";

                var senderLink = template.content.querySelector(".tweet-sender-link");
                senderLink.href = "http://twitter.com/" + tweet.Sender;

                var moment = template.content.querySelector(".tweet-moment");
                moment.setAttribute("datetime", tweet.CreatedAt);

                var fav_count = template.content.querySelector(".tweet-fav-count");
                fav_count.textContent = tweet.Favourites;

                var retweet_count = template.content.querySelector(".tweet-retweet-count");
                retweet_count.textContent = tweet.Retweets;

                var elem = document.importNode(template.content, true);
                map.append(elem);
            }

            // loop over all the hashtags
            var shown = 0;
            var maxShown = 10;
            var holder = $("#hashtags");
            holder.html("");
            for (var i = result.HashTags.length - 1; i >= 0 && shown < maxShown; i--) {
                var bucket = result.HashTags[i];

                for (var t = 0; t < bucket.Tags.length && shown < maxShown; t++, shown++) {
                    var tag = bucket.Tags[t];

                    var hashtagTemplate = document.querySelector("#hashtag-template");

                    var hashtagContainer = hashtagTemplate.content.querySelector(".hashtag");
                    hashtagContainer.setAttribute("data-hashtag", tag);

                    var span = hashtagContainer.querySelector("span");
                    span.textContent = tag + " (" + bucket.Occurances + ")";

                    var elem = document.importNode(hashtagTemplate.content, true);
                    holder.append(elem);
                }
            }

            $(".hashtag").click(function (e) {
                var text = this.getAttribute("data-hashtag");
                $.ajax({
                    url: "@Url.Action("Tweets", "Twitter")?radius=1mi&latitude=" + loc.latitude + "&longitude=" + loc.longitude + "&query=" + encodeURIComponent("#" + text),
                    success: success,
                    error: error
                });
            });
        }
    });
</script>